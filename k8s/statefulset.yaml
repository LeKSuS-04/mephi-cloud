apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka-headless
spec:
  clusterIP: None
  clusterIPs:
    - None
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: tcp-kafka-int
      port: 9092
      protocol: TCP
      targetPort: tcp-kafka-int
    - name: tcp-kafka-ctrl
      port: 19093
      protocol: TCP
      targetPort: tcp-kafka-ctrl
  selector:
    app: kafka
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  template:
    metadata:
      labels:
        app: kafka
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - kafka
              topologyKey: kubernetes.io/hostname
      containers:
        - name: kafka
          image: apache/kafka:3.9.1
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -exc
            - |
              export CLUSTER_ID="tE7EzBJ9s39G4FJDWQkQAt" && \
              export KAFKA_NODE_ID=${HOSTNAME##*-}

              exec /etc/kafka/docker/run
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KAFKA_PROCESS_ROLES
              value: broker,controller
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: 0@kafka-0.kafka-headless.kafka.svc.cluster.local:19093,1@kafka-1.kafka-headless.kafka.svc.cluster.local:19093,2@kafka-2.kafka-headless.kafka.svc.cluster.local:19093
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://:9092,CONTROLLER://:19093
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: CONTROLLER
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://10.20.14.80:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - name: KAFKA_LOG_DIRS
              value: /opt/kafka/log
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_NUM_PARTITIONS
              value: "1"
          ports:
            - containerPort: 9092
              name: tcp-kafka-int
              protocol: TCP
            - containerPort: 9093
              name: tcp-kafka-ctrl
              protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1400Mi
            requests:
              cpu: 250m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
